{"version":3,"sources":["panels/Auth.js","panels/Signup.js","panels/Home.js","App.js","sw.js","index.js","img/persik.png"],"names":["osName","platform","Auth","props","id","left","onClick","go","data-to","IOS","className","src","persik","alt","Signup","Home","title","size","level","App","useState","activePanel","setActivePanel","e","currentTarget","dataset","to","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","isLocalhost","Boolean","window","location","hostname","match","connect","send","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","ReactDOM","render","document","getElementById","module","exports"],"mappings":"4nBAYMA,G,MAASC,eAoBAC,EAlBF,SAAAC,GAAK,OACd,kBAAC,IAAD,CAAOC,GAAID,EAAMC,IACb,kBAAC,IAAD,CACIC,KAAM,kBAAC,IAAD,CAAcC,QAASH,EAAMI,GAAIC,UAAQ,QAC1CR,IAAWS,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAFjD,UAOA,yBAAKC,UAAU,SAASC,IAAKC,IAAQC,IAAI,qBCX3Cb,EAASC,cAoBAa,EAlBA,SAAAX,GAAK,OAChB,kBAAC,IAAD,CAAOC,GAAID,EAAMC,IACb,kBAAC,IAAD,CACIC,KAAM,kBAAC,IAAD,CAAcC,QAASH,EAAMI,GAAIC,UAAQ,QAC1CR,IAAWS,IAAM,kBAAC,IAAD,MAAuB,kBAAC,IAAD,QAFjD,UAOA,yBAAKC,UAAU,SAASC,IAAKC,IAAQC,IAAI,qB,6DCSlCE,EAxBF,SAAC,GAAD,IAAGX,EAAH,EAAGA,GAAIG,EAAP,EAAOA,GAAP,OACZ,kBAAC,IAAD,CAAOH,GAAIA,GACV,kBAAC,IAAD,oBAEA,kBAAC,IAAD,CAAOY,MAAM,sLACH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,KAAK,KAAKC,MAAM,IAAIZ,QAASC,EAAIC,UAAQ,QAAjD,mCAIJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQS,KAAK,KAAKC,MAAM,IAAIZ,QAASC,EAAIC,UAAQ,UAAjD,0ECsBDW,EAhCH,WAAO,IAAD,EACqBC,mBAAS,QAD9B,mBACVC,EADU,KACGC,EADH,KAmBXf,EAAK,SAAAgB,GACVD,EAAeC,EAAEC,cAAcC,QAAQC,KAGxC,OACC,kBAAC,IAAD,CAAML,YAAaA,GAClB,kBAAC,EAAD,CAAMjB,GAAG,OAAOG,GAAIA,IACpB,kBAAC,EAAD,CAAMH,GAAG,OAAOG,GAAIA,IACpB,kBAAC,EAAD,CAAQH,GAAG,SAASG,GAAIA,MC1B3B,SAASoB,EAAgBC,GACxBC,UAAUC,cACRC,SAASH,GACTI,MAAK,SAACC,GACNA,EAAaC,cAAgB,WAC5B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACD,cAA3BF,EAAiBG,QAChBT,UAAUC,cAAcS,WAK3BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMhBC,OAAM,SAACC,GACPH,QAAQG,MAAM,4CAA6CA,MA6B9D,IAAMC,EAAcC,QAAqC,cAA7BC,OAAOC,SAASC,UAEd,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DC3DhCC,IAAQC,KAAK,gBD6DE,WACd,GAA6C,kBAAmBtB,UAAW,CAG1E,GADkB,IAAIuB,IAAIC,UAAwBP,OAAOC,UAC3CO,SAAWR,OAAOC,SAASO,OAIxC,OAGDR,OAAOS,iBAAiB,QAAQ,WAC/B,IAAM3B,EAAK,UAAMyB,UAAN,sBAEPT,IA7CP,SAAiChB,GAEhC4B,MAAM5B,GACJI,MAAK,SAACyB,GAGe,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7ChC,UAAUC,cAAcgC,MAAM9B,MAAK,SAACC,GACnCA,EAAa8B,aAAa/B,MAAK,WAC9Bc,OAAOC,SAASiB,eAKlBrC,EAAgBC,MAGjBc,OAAM,WACNF,QAAQC,IAAI,oEA0BXwB,CAAwBrC,GAIxBC,UAAUC,cAAcgC,MAAM9B,MAAK,WAClCQ,QAAQC,IACP,gHAMFd,EAAgBC,OCnFpBsC,GAEAC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCjBjDC,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.a1ae273c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Auth = props => (\n    <Panel id={props.id}>\n        <PanelHeader\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n            </HeaderButton>}\n        >\n            Persik\n        </PanelHeader>\n        <img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n    </Panel>\n);\n\nAuth.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default Auth;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Signup = props => (\n    <Panel id={props.id}>\n        <PanelHeader\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n            </HeaderButton>}\n        >\n            Persik\n        </PanelHeader>\n        <img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n    </Panel>\n);\n\nSignup.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default Signup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\n\nconst Home = ({ id, go }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Goodly Base</PanelHeader>\n\n\t\t<Group title=\"Войдите под своей учетной записью\">\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"auth\">\n                    Войти\n                </Button>\n            </Div>\n            <Div>\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"signup\">\n                    Регистрация\n                </Button>\n            </Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport Auth from './panels/Auth';\nimport Signup from './panels/Signup';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\n\t// useEffect(() => {\n\t// \tconnect.subscribe(({ detail: { type, data }}) => {\n\t// \t\tif (type === 'VKWebAppUpdateConfig') {\n\t// \t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t// \t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t// \t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t// \t\t}\n\t// \t});\n\t// \tasync function fetchData() {\n\t// \t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\n\t// \t\tsetUser(user);\n\t// \t\tsetPopout(null);\n\t// \t}\n\t// \tfetchData();\n\t// }, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel}>\n\t\t\t<Home id='home' go={go} />\n\t\t\t<Auth id='auth' go={go} />\n\t\t\t<Signup id='signup' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nfunction registerValidSW(swUrl) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log('New content is available; please refresh.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\tresponse.headers.get('content-type').indexOf('javascript') === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit https://goo.gl/SC7cgQ'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\nimport registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\nregisterServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}